{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abhis/pixelverse/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\"flex flex-col gap-1.5 px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,0BAA0B;QACvC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abhis/pixelverse/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"border-input file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kbACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abhis/pixelverse/app/components/chat-panel.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport type React from \"react\"\r\n\r\nimport { useState, useRef, useEffect } from \"react\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Input } from \"@/components/ui/input\"\r\nimport { Send } from \"lucide-react\"\r\n\r\n// Mock chat data\r\nconst initialMessages = [\r\n  { id: 1, sender: \"System\", content: \"Welcome to the Golden Dragon Tavern!\", timestamp: new Date().toISOString() },\r\n  {\r\n    id: 2,\r\n    sender: \"ElvenArcher\",\r\n    content: \"Has anyone seen the traveling merchant today?\",\r\n    timestamp: new Date(Date.now() - 120000).toISOString(),\r\n  },\r\n  {\r\n    id: 3,\r\n    sender: \"DwarfSmith\",\r\n    content: \"I heard he'll be arriving tomorrow with rare items from the eastern kingdoms.\",\r\n    timestamp: new Date(Date.now() - 60000).toISOString(),\r\n  },\r\n]\r\n\r\nexport default function ChatPanel() {\r\n  const [messages, setMessages] = useState(initialMessages)\r\n  const [newMessage, setNewMessage] = useState(\"\")\r\n  const messagesEndRef = useRef<HTMLDivElement>(null)\r\n\r\n  // Auto-scroll to bottom when new messages arrive\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n  }, [])\r\n\r\n  const handleSendMessage = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    if (!newMessage.trim()) return\r\n\r\n    const message = {\r\n      id: messages.length + 1,\r\n      sender: \"You\",\r\n      content: newMessage,\r\n      timestamp: new Date().toISOString(),\r\n    }\r\n\r\n    setMessages([...messages, message])\r\n    setNewMessage(\"\")\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-full\">\r\n      <div className=\"flex-1 overflow-y-auto p-3 space-y-3\">\r\n        {messages.map((message) => (\r\n          <div key={message.id} className={`flex flex-col ${message.sender === \"You\" ? \"items-end\" : \"items-start\"}`}>\r\n            <div\r\n              className={`px-3 py-2 rounded-lg max-w-[80%] ${\r\n                message.sender === \"You\"\r\n                  ? \"bg-purple-600 text-white\"\r\n                  : message.sender === \"System\"\r\n                    ? \"bg-gray-200 text-gray-800\"\r\n                    : \"bg-gray-100 text-gray-800\"\r\n              }`}\r\n            >\r\n              {message.sender !== \"You\" && <div className=\"text-xs font-medium mb-1\">{message.sender}</div>}\r\n              <p className=\"text-sm\">{message.content}</p>\r\n            </div>\r\n            <span className=\"text-xs text-gray-500 mt-1\">\r\n              {new Date(message.timestamp).toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" })}\r\n            </span>\r\n          </div>\r\n        ))}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      <div className=\"p-3 border-t\">\r\n        <form onSubmit={handleSendMessage} className=\"flex space-x-2\">\r\n          <Input\r\n            value={newMessage}\r\n            onChange={(e) => setNewMessage(e.target.value)}\r\n            placeholder=\"Type a message...\"\r\n            className=\"flex-1\"\r\n          />\r\n          <Button type=\"submit\" size=\"icon\">\r\n            <Send className=\"h-4 w-4\" />\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n"],"names":[],"mappings":";;;;AAIA;AACA;AACA;AACA;AAPA;;;;;;AASA,iBAAiB;AACjB,MAAM,kBAAkB;IACtB;QAAE,IAAI;QAAG,QAAQ;QAAU,SAAS;QAAwC,WAAW,IAAI,OAAO,WAAW;IAAG;IAChH;QACE,IAAI;QACJ,QAAQ;QACR,SAAS;QACT,WAAW,IAAI,KAAK,KAAK,GAAG,KAAK,QAAQ,WAAW;IACtD;IACA;QACE,IAAI;QACJ,QAAQ;QACR,SAAS;QACT,WAAW,IAAI,KAAK,KAAK,GAAG,KAAK,OAAO,WAAW;IACrD;CACD;AAEc,SAAS;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,iBAAiB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAE9C,iDAAiD;IACjD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,eAAe,OAAO,EAAE,eAAe;YAAE,UAAU;QAAS;IAC9D,GAAG,EAAE;IAEL,MAAM,oBAAoB,CAAC;QACzB,EAAE,cAAc;QAChB,IAAI,CAAC,WAAW,IAAI,IAAI;QAExB,MAAM,UAAU;YACd,IAAI,SAAS,MAAM,GAAG;YACtB,QAAQ;YACR,SAAS;YACT,WAAW,IAAI,OAAO,WAAW;QACnC;QAEA,YAAY;eAAI;YAAU;SAAQ;QAClC,cAAc;IAChB;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;oBACZ,SAAS,GAAG,CAAC,CAAC,wBACb,8OAAC;4BAAqB,WAAW,CAAC,cAAc,EAAE,QAAQ,MAAM,KAAK,QAAQ,cAAc,eAAe;;8CACxG,8OAAC;oCACC,WAAW,CAAC,iCAAiC,EAC3C,QAAQ,MAAM,KAAK,QACf,6BACA,QAAQ,MAAM,KAAK,WACjB,8BACA,6BACN;;wCAED,QAAQ,MAAM,KAAK,uBAAS,8OAAC;4CAAI,WAAU;sDAA4B,QAAQ,MAAM;;;;;;sDACtF,8OAAC;4CAAE,WAAU;sDAAW,QAAQ,OAAO;;;;;;;;;;;;8CAEzC,8OAAC;oCAAK,WAAU;8CACb,IAAI,KAAK,QAAQ,SAAS,EAAE,kBAAkB,CAAC,EAAE,EAAE;wCAAE,MAAM;wCAAW,QAAQ;oCAAU;;;;;;;2BAdnF,QAAQ,EAAE;;;;;kCAkBtB,8OAAC;wBAAI,KAAK;;;;;;;;;;;;0BAGZ,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAK,UAAU;oBAAmB,WAAU;;sCAC3C,8OAAC,0HAAA,CAAA,QAAK;4BACJ,OAAO;4BACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;4BAC7C,aAAY;4BACZ,WAAU;;;;;;sCAEZ,8OAAC,2HAAA,CAAA,SAAM;4BAAC,MAAK;4BAAS,MAAK;sCACzB,cAAA,8OAAC,kMAAA,CAAA,OAAI;gCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAM5B","debugId":null}},
    {"offset": {"line": 291, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abhis/pixelverse/components/ui/avatar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Avatar({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Root>) {\n  return (\n    <AvatarPrimitive.Root\n      data-slot=\"avatar\"\n      className={cn(\n        \"relative flex size-8 shrink-0 overflow-hidden rounded-full\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AvatarImage({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Image>) {\n  return (\n    <AvatarPrimitive.Image\n      data-slot=\"avatar-image\"\n      className={cn(\"aspect-square size-full\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction AvatarFallback({\n  className,\n  ...props\n}: React.ComponentProps<typeof AvatarPrimitive.Fallback>) {\n  return (\n    <AvatarPrimitive.Fallback\n      data-slot=\"avatar-fallback\"\n      className={cn(\n        \"bg-muted flex size-full items-center justify-center rounded-full\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"],"names":[],"mappings":";;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,OAAO,EACd,SAAS,EACT,GAAG,OAC+C;IAClD,qBACE,8OAAC,kKAAA,CAAA,OAAoB;QACnB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,8DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,8OAAC,kKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,2BAA2B;QACxC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,eAAe,EACtB,SAAS,EACT,GAAG,OACmD;IACtD,qBACE,8OAAC,kKAAA,CAAA,WAAwB;QACvB,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,oEACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 343, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 349, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abhis/pixelverse/app/components/participants-list.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { MessageCircle, Volume2, VolumeX } from \"lucide-react\"\r\n\r\n// Mock participants data\r\nconst participants = [\r\n  { id: 1, name: \"ElvenArcher\", avatar: \"elf\", speaking: false, muted: false },\r\n  { id: 2, name: \"DwarfSmith\", avatar: \"dwarf\", speaking: true, muted: false },\r\n  { id: 3, name: \"WizardMage\", avatar: \"human\", speaking: false, muted: true },\r\n  { id: 4, name: \"RogueThief\", avatar: \"halfling\", speaking: false, muted: false },\r\n  { id: 5, name: \"You\", avatar: \"human\", speaking: false, muted: false, isYou: true },\r\n]\r\n\r\nexport default function ParticipantsList() {\r\n  return (\r\n    <div className=\"flex-1 overflow-y-auto\">\r\n      <div className=\"p-3 space-y-3\">\r\n        {participants.map((participant) => (\r\n          <div key={participant.id} className=\"flex items-center space-x-3 p-2 rounded-lg hover:bg-gray-50\">\r\n            <Avatar className={`h-10 w-10 border ${participant.speaking ? \"border-green-500 border-2\" : \"\"}`}>\r\n              <AvatarImage src={`/placeholder.svg?height=40&width=40`} alt={participant.name} />\r\n              <AvatarFallback>{participant.name.substring(0, 2).toUpperCase()}</AvatarFallback>\r\n            </Avatar>\r\n            <div className=\"flex-1 min-w-0\">\r\n              <p className=\"text-sm font-medium truncate\">\r\n                {participant.name} {participant.isYou && \"(You)\"}\r\n              </p>\r\n            </div>\r\n            <div className=\"flex space-x-1\">\r\n              {!participant.isYou && (\r\n                <>\r\n                  <Button variant=\"ghost\" size=\"icon\" className=\"h-8 w-8\">\r\n                    <MessageCircle className=\"h-4 w-4\" />\r\n                  </Button>\r\n                  <Button variant=\"ghost\" size=\"icon\" className=\"h-8 w-8\">\r\n                    {participant.muted ? <VolumeX className=\"h-4 w-4 text-red-500\" /> : <Volume2 className=\"h-4 w-4\" />}\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AAAA;AAJA;;;;;AAMA,yBAAyB;AACzB,MAAM,eAAe;IACnB;QAAE,IAAI;QAAG,MAAM;QAAe,QAAQ;QAAO,UAAU;QAAO,OAAO;IAAM;IAC3E;QAAE,IAAI;QAAG,MAAM;QAAc,QAAQ;QAAS,UAAU;QAAM,OAAO;IAAM;IAC3E;QAAE,IAAI;QAAG,MAAM;QAAc,QAAQ;QAAS,UAAU;QAAO,OAAO;IAAK;IAC3E;QAAE,IAAI;QAAG,MAAM;QAAc,QAAQ;QAAY,UAAU;QAAO,OAAO;IAAM;IAC/E;QAAE,IAAI;QAAG,MAAM;QAAO,QAAQ;QAAS,UAAU;QAAO,OAAO;QAAO,OAAO;IAAK;CACnF;AAEc,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACZ,aAAa,GAAG,CAAC,CAAC,4BACjB,8OAAC;oBAAyB,WAAU;;sCAClC,8OAAC,2HAAA,CAAA,SAAM;4BAAC,WAAW,CAAC,iBAAiB,EAAE,YAAY,QAAQ,GAAG,8BAA8B,IAAI;;8CAC9F,8OAAC,2HAAA,CAAA,cAAW;oCAAC,KAAK,CAAC,mCAAmC,CAAC;oCAAE,KAAK,YAAY,IAAI;;;;;;8CAC9E,8OAAC,2HAAA,CAAA,iBAAc;8CAAE,YAAY,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,WAAW;;;;;;;;;;;;sCAE/D,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAE,WAAU;;oCACV,YAAY,IAAI;oCAAC;oCAAE,YAAY,KAAK,IAAI;;;;;;;;;;;;sCAG7C,8OAAC;4BAAI,WAAU;sCACZ,CAAC,YAAY,KAAK,kBACjB;;kDACE,8OAAC,2HAAA,CAAA,SAAM;wCAAC,SAAQ;wCAAQ,MAAK;wCAAO,WAAU;kDAC5C,cAAA,8OAAC,wNAAA,CAAA,gBAAa;4CAAC,WAAU;;;;;;;;;;;kDAE3B,8OAAC,2HAAA,CAAA,SAAM;wCAAC,SAAQ;wCAAQ,MAAK;wCAAO,WAAU;kDAC3C,YAAY,KAAK,iBAAG,8OAAC,4MAAA,CAAA,UAAO;4CAAC,WAAU;;;;;iEAA4B,8OAAC,4MAAA,CAAA,UAAO;4CAAC,WAAU;;;;;;;;;;;;;;;;;;;mBAjBvF,YAAY,EAAE;;;;;;;;;;;;;;;AA2BlC","debugId":null}},
    {"offset": {"line": 519, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 525, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abhis/pixelverse/app/components/tavern-map.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport Phaser from 'phaser';\r\n\r\nconst IsekaiVillageGame: React.FC = () => {\r\n  const gameRef = useRef<HTMLDivElement>(null);\r\n  const gameInstanceRef = useRef<Phaser.Game | null>(null);\r\n  const [isAssetsLoaded, setIsAssetsLoaded] = useState(false);\r\n  const [phaserLoaded, setPhaserLoaded] = useState(false);\r\n\r\n   useEffect(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      import(\"phaser\").then((Phaser) => {\r\n        const config = {\r\n          type: Phaser.AUTO,\r\n          width: 800,\r\n          height: 600,\r\n          physics: {\r\n            default: \"arcade\",\r\n            arcade: { gravity: { y: 0 } },\r\n          },\r\n          scene: {\r\n            preload: function () {\r\n              this.load.image(\"player\", \"/assets/player.png\"); // Load character sprite\r\n            },\r\n            create: function () {\r\n              this.add.image(400, 300, \"player\"); // Add character at center\r\n            },\r\n            update: function () {\r\n              // Movement logic will go here\r\n            },\r\n          },\r\n        };\r\n\r\n        if (!gameRef.current) {\r\n          gameRef.current = new Phaser.Game(config);\r\n          setPhaserLoaded(true);\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== 'undefined' && isAssetsLoaded && gameRef.current) {\r\n      class IsekaiVillageScene extends Phaser.Scene {\r\n        private player!: Phaser.Physics.Arcade.Sprite;\r\n        private npcs!: Phaser.Physics.Arcade.Group;\r\n        private cursors!: Phaser.Types.Input.Keyboard.CursorKeys;\r\n        private background!: Phaser.GameObjects.Image;\r\n\r\n        constructor() {\r\n          super({ key: 'IsekaiVillageScene' });\r\n        }\r\n\r\n        preload() {\r\n          // Load background\r\n          this.load.image('background', '/tavern.jpeg');\r\n\r\n          this.load.spritesheet('player', '/tavern.jpeg', {\r\n            frameWidth: 64,  \r\n            frameHeight: 64\r\n          });\r\n\r\n          this.load.spritesheet('npc', '/tavern.jpeg', {\r\n            frameWidth: 64, \r\n            frameHeight: 64\r\n          });\r\n        }\r\n\r\n        create() {\r\n          // Add background\r\n          this.background = this.add.image(400, 300, 'background')\r\n            .setDisplaySize(800, 600);\r\n\r\n          // Create player animations\r\n          this.createPlayerAnimations();\r\n\r\n          // Create NPC animations\r\n          this.createNPCAnimations();\r\n\r\n          // Create player\r\n          this.createPlayer();\r\n\r\n          // Create NPCs\r\n          this.createNPCs();\r\n\r\n          // Setup controls\r\n          this.setupControls();\r\n\r\n          // Add debug text\r\n          this.add.text(10, 10, 'Use arrow keys to move', { \r\n            color: '#ffffff', \r\n            backgroundColor: '#000000',\r\n            padding: \"10px\"\r\n          });\r\n        }\r\n\r\n        createPlayerAnimations() {\r\n          // Walking animations for different directions\r\n          this.anims.create({\r\n            key: 'player-walk-down',\r\n            frames: this.anims.generateFrameNumbers('player', { start: 0, end: 3 }),\r\n            frameRate: 10,\r\n            repeat: -1\r\n          });\r\n\r\n          this.anims.create({\r\n            key: 'player-walk-left',\r\n            frames: this.anims.generateFrameNumbers('player', { start: 4, end: 7 }),\r\n            frameRate: 10,\r\n            repeat: -1\r\n          });\r\n\r\n          this.anims.create({\r\n            key: 'player-walk-right',\r\n            frames: this.anims.generateFrameNumbers('player', { start: 8, end: 11 }),\r\n            frameRate: 10,\r\n            repeat: -1\r\n          });\r\n\r\n          this.anims.create({\r\n            key: 'player-walk-up',\r\n            frames: this.anims.generateFrameNumbers('player', { start: 12, end: 15 }),\r\n            frameRate: 10,\r\n            repeat: -1\r\n          });\r\n        }\r\n\r\n        createNPCAnimations() {\r\n          // NPC walking animations\r\n          this.anims.create({\r\n            key: 'npc-walk-down',\r\n            frames: this.anims.generateFrameNumbers('npc', { start: 0, end: 3 }),\r\n            frameRate: 8,\r\n            repeat: -1\r\n          });\r\n        }\r\n\r\n        createPlayer() {\r\n          // Create player sprite\r\n          this.player = this.physics.add.sprite(400, 300, 'player')\r\n            .setScale(1.5)\r\n            .setCollideWorldBounds(true);\r\n        }\r\n\r\n        createNPCs() {\r\n          // Create NPC group\r\n          this.npcs = this.physics.add.group();\r\n\r\n          // Create multiple NPCs with random movement\r\n          const npcPositions = [\r\n            { x: 200, y: 200 },\r\n            { x: 600, y: 400 },\r\n            { x: 300, y: 500 }\r\n          ];\r\n\r\n          npcPositions.forEach(pos => {\r\n            const npc = this.npcs.create(pos.x, pos.y, 'npc')\r\n              .setScale(1.5)\r\n              .setCollideWorldBounds(true);\r\n            \r\n            // Random movement for NPCs\r\n            this.time.addEvent({\r\n              delay: Phaser.Math.Between(2000, 5000),\r\n              callback: () => this.moveNPC(npc),\r\n              loop: true\r\n            });\r\n          });\r\n        }\r\n\r\n        moveNPC(npc: Phaser.Physics.Arcade.Sprite) {\r\n          const directions = [\r\n            { x: -1, y: 0 },  // Left\r\n            { x: 1, y: 0 },   // Right\r\n            { x: 0, y: -1 },  // Up\r\n            { x: 0, y: 1 }    // Down\r\n          ];\r\n\r\n          const randomDir = Phaser.Math.RND.pick(directions);\r\n          const speed = 100;\r\n\r\n          npc.setVelocity(randomDir.x * speed, randomDir.y * speed);\r\n          npc.anims.play('npc-walk-down', true);\r\n\r\n          // Stop movement after a short time\r\n          this.time.delayedCall(1000, () => {\r\n            npc.setVelocity(0);\r\n          });\r\n        }\r\n\r\n        setupControls() {\r\n          // Keyboard controls\r\n          this.cursors = this.input.keyboard.createCursorKeys();\r\n        }\r\n\r\n        update() {\r\n          const speed = 200;\r\n          this.player.setVelocity(0);\r\n\r\n          // Player movement and animation\r\n          if (this.cursors.left.isDown) {\r\n            this.player.setVelocityX(-speed);\r\n            this.player.anims.play('player-walk-left', true);\r\n          }\r\n          else if (this.cursors.right.isDown) {\r\n            this.player.setVelocityX(speed);\r\n            this.player.anims.play('player-walk-right', true);\r\n          }\r\n\r\n          if (this.cursors.up.isDown) {\r\n            this.player.setVelocityY(-speed);\r\n            this.player.anims.play('player-walk-up', true);\r\n          }\r\n          else if (this.cursors.down.isDown) {\r\n            this.player.setVelocityY(speed);\r\n            this.player.anims.play('player-walk-down', true);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Game configuration\r\n      const config: Phaser.Types.Core.GameConfig = {\r\n        type: Phaser.AUTO,\r\n        parent: gameRef.current,\r\n        width: 800,\r\n        height: 600,\r\n        backgroundColor: '#000000',\r\n        physics: {\r\n          default: 'arcade',\r\n          arcade: {\r\n            gravity: {\r\n              y: 0,\r\n              x: 0\r\n            },\r\n            debug: false\r\n          }\r\n        },\r\n        scene: [IsekaiVillageScene]\r\n      };\r\n\r\n      // Create game instance\r\n      try {\r\n        gameInstanceRef.current = new Phaser.Game(config);\r\n      } catch (error) {\r\n        console.error('Failed to initialize Phaser game:', error);\r\n      }\r\n\r\n      // Cleanup on unmount\r\n      return () => {\r\n        gameInstanceRef.current?.destroy(true);\r\n      };\r\n    }\r\n  }, [isAssetsLoaded]);\r\n\r\n  return (\r\n    <div \r\n      ref={gameRef} \r\n      className=\"w-full h-[600px] border-2 border-gray-300 rounded-lg\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default IsekaiVillageGame;"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKA,MAAM,oBAA8B;IAClC,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IACvC,MAAM,kBAAkB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAsB;IACnD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACrD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEhD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACT,uCAAmC;;QA4BnC;IACF,GAAG,EAAE;IAGL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,uCAAwE;;YAChE,IAAA;QA+MR;IACF,GAAG;QAAC;KAAe;IAEnB,qBACE,8OAAC;QACC,KAAK;QACL,WAAU;;;;;;AAGhB;uCAEe","debugId":null}},
    {"offset": {"line": 563, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 569, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/abhis/pixelverse/app/tavern/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport { Button } from \"@/components/ui/button\"\r\nimport { Card } from \"@/components/ui/card\"\r\nimport { MessageCircle, Users, X, Mic, MicOff, Settings } from \"lucide-react\"\r\nimport ChatPanel from \"../components/chat-panel\"\r\nimport ParticipantsList from \"../components/participants-list\"\r\nimport TavernMap from \"../components/tavern-map\"\r\nimport IsekaiVillageGame from \"../components/tavern-map\"\r\n\r\nexport default function TavernPage() {\r\n  const [showChat, setShowChat] = useState(false)\r\n  const [showParticipants, setShowParticipants] = useState(false)\r\n  const [isMuted, setIsMuted] = useState(false)\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-b from-indigo-50 to-purple-50 relative\">\r\n      {/* Main tavern area */}\r\n      <div className=\"p-4\">\r\n        <IsekaiVillageGame/>\r\n      </div>\r\n\r\n      {/* Controls */}\r\n      <div className=\"fixed bottom-4 left-1/2 transform -translate-x-1/2 flex space-x-2\">\r\n        <Button\r\n          variant=\"secondary\"\r\n          className=\"rounded-full shadow-lg\"\r\n          onClick={() => setShowParticipants(!showParticipants)}\r\n        >\r\n          <Users className=\"h-5 w-5 mr-2\" />\r\n          Participants\r\n        </Button>\r\n        <Button variant=\"secondary\" className=\"rounded-full shadow-lg\" onClick={() => setShowChat(!showChat)}>\r\n          <MessageCircle className=\"h-5 w-5 mr-2\" />\r\n          Chat\r\n        </Button>\r\n        <Button\r\n          variant={isMuted ? \"destructive\" : \"secondary\"}\r\n          className=\"rounded-full shadow-lg\"\r\n          onClick={() => setIsMuted(!isMuted)}\r\n        >\r\n          {isMuted ? <MicOff className=\"h-5 w-5 mr-2\" /> : <Mic className=\"h-5 w-5 mr-2\" />}\r\n          {isMuted ? \"Unmute\" : \"Mute\"}\r\n        </Button>\r\n        <Button variant=\"secondary\" className=\"rounded-full shadow-lg\">\r\n          <Settings className=\"h-5 w-5 mr-2\" />\r\n          Settings\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Chat panel */}\r\n      {showChat && (\r\n        <div className=\"fixed bottom-16 right-4 w-80 h-96 bg-white rounded-lg shadow-xl border border-gray-200 flex flex-col\">\r\n          <div className=\"p-3 border-b flex justify-between items-center\">\r\n            <h3 className=\"font-medium\">Tavern Chat</h3>\r\n            <Button variant=\"ghost\" size=\"sm\" className=\"h-8 w-8 p-0\" onClick={() => setShowChat(false)}>\r\n              <X className=\"h-4 w-4\" />\r\n            </Button>\r\n          </div>\r\n          <ChatPanel />\r\n        </div>\r\n      )}\r\n\r\n      {/* Participants list */}\r\n      {showParticipants && (\r\n        <div className=\"fixed bottom-16 left-4 w-64 bg-white rounded-lg shadow-xl border border-gray-200 flex flex-col\">\r\n          <div className=\"p-3 border-b flex justify-between items-center\">\r\n            <h3 className=\"font-medium\">Tavern Guests</h3>\r\n            <Button variant=\"ghost\" size=\"sm\" className=\"h-8 w-8 p-0\" onClick={() => setShowParticipants(false)}>\r\n              <X className=\"h-4 w-4\" />\r\n            </Button>\r\n          </div>\r\n          <ParticipantsList />\r\n        </div>\r\n      )}\r\n\r\n      {/* Room info */}\r\n      <div className=\"fixed top-20 left-4\">\r\n        <Card className=\"p-3 shadow-md\">\r\n          <h3 className=\"font-medium text-lg\">The Golden Dragon Tavern</h3>\r\n          <p className=\"text-sm text-gray-500\">Main Hall • 12 adventurers present</p>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AATA;;;;;;;;;AAWe,SAAS;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,mIAAA,CAAA,UAAiB;;;;;;;;;;0BAIpB,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,2HAAA,CAAA,SAAM;wBACL,SAAQ;wBACR,WAAU;wBACV,SAAS,IAAM,oBAAoB,CAAC;;0CAEpC,8OAAC,oMAAA,CAAA,QAAK;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;kCAGpC,8OAAC,2HAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAY,WAAU;wBAAyB,SAAS,IAAM,YAAY,CAAC;;0CACzF,8OAAC,wNAAA,CAAA,gBAAa;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;kCAG5C,8OAAC,2HAAA,CAAA,SAAM;wBACL,SAAS,UAAU,gBAAgB;wBACnC,WAAU;wBACV,SAAS,IAAM,WAAW,CAAC;;4BAE1B,wBAAU,8OAAC,0MAAA,CAAA,SAAM;gCAAC,WAAU;;;;;qDAAoB,8OAAC,gMAAA,CAAA,MAAG;gCAAC,WAAU;;;;;;4BAC/D,UAAU,WAAW;;;;;;;kCAExB,8OAAC,2HAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAY,WAAU;;0CACpC,8OAAC,0MAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;;;;;;;YAMxC,0BACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAc;;;;;;0CAC5B,8OAAC,2HAAA,CAAA,SAAM;gCAAC,SAAQ;gCAAQ,MAAK;gCAAK,WAAU;gCAAc,SAAS,IAAM,YAAY;0CACnF,cAAA,8OAAC,4LAAA,CAAA,IAAC;oCAAC,WAAU;;;;;;;;;;;;;;;;;kCAGjB,8OAAC,mIAAA,CAAA,UAAS;;;;;;;;;;;YAKb,kCACC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAc;;;;;;0CAC5B,8OAAC,2HAAA,CAAA,SAAM;gCAAC,SAAQ;gCAAQ,MAAK;gCAAK,WAAU;gCAAc,SAAS,IAAM,oBAAoB;0CAC3F,cAAA,8OAAC,4LAAA,CAAA,IAAC;oCAAC,WAAU;;;;;;;;;;;;;;;;;kCAGjB,8OAAC,0IAAA,CAAA,UAAgB;;;;;;;;;;;0BAKrB,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,yHAAA,CAAA,OAAI;oBAAC,WAAU;;sCACd,8OAAC;4BAAG,WAAU;sCAAsB;;;;;;sCACpC,8OAAC;4BAAE,WAAU;sCAAwB;;;;;;;;;;;;;;;;;;;;;;;AAK/C","debugId":null}},
    {"offset": {"line": 838, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}